#!/usr/bin/env ruby

require_relative '../lib/llms/executors'
require_relative '../lib/llms/conversation'
require 'optparse'

class CalculatorTool
  def self.tool_schema
    {
      name: 'calculator_tool',
      description: 'Compute a plain-text arithmetic calculation using the operators + - * / and parens (). E.g. (2 + 2) / (3 - 1)',
      parameters: {
        properties: {
          calculation: {
            type: 'string',
            description: 'The arithmetic operation to perform'
          },
        },
        type: 'object',
      }
    }
  end
end

def test_model(model_name, stream: false, usage: false)
  begin
    executor = LLMs::Executors.instance(model_name: model_name, max_completion_tokens: 100)

    cm = LLMs::Conversation.new
    cm.set_system_message("Always reply with a tool use function call")
    cm.set_available_tools([CalculatorTool])
    cm.add_user_message('2+2=')

    if stream
      print "#{model_name}: "
      executor.execute_conversation(cm) do |chunk|
        print chunk
      end
      puts
    else
      response_message = executor.execute_conversation(cm)
      puts "#{model_name}: #{response_message&.text}"
    end

    if executor.last_error
      puts 'ERROR: ' + executor.last_error.inspect
    elsif executor.last_received_message.tool_calls
      puts 'Tool calls: ' + executor.last_received_message.tool_calls.map{|tc| "#{tc.name}: #{tc.arguments} - #{tc.tool_call_id}"}.join(', ')
    end

    if usage
      puts executor.last_usage_data.inspect
    end
  rescue => e
    puts "#{model_name}: ERROR - #{e.message}"
    puts e.backtrace
  end
end

def main
  options = {}
  OptionParser.new do |opts|
    opts.on("--stream", "Stream the output") do |v|
      options[:stream] = v
    end
    opts.on("--usage", "Show usage") do |v|
      options[:usage] = v
    end
  end.parse!

  models = LLMs::Models.list_model_names(full: true, require_tools: true)
  if ARGV[0]
    models = models.select { |name| name.include?(ARGV[0]) }
  end

  models.each do |model_name|
    test_model(model_name, stream: options[:stream], usage: options[:usage])
    puts "-" * 80
  end
end

main
